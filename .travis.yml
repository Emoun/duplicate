language: rust
rust:
- 1.45.0
- stable
- beta
- nightly

before_script:
- cargo install cargo-expand
- rustup toolchain install nightly
- rustup component add rustfmt

script:
# Test no_features
- cargo build --verbose --no-default-features
- "cargo test --no-default-features -- --skip default_features::"
# Test default_features
- cargo build --verbose
- "cargo test --verbose default_features::"
# Test module_disambiguation features
- cargo build --verbose --features module_disambiguation
- "cargo test --features module_disambiguation -- --skip default_features::"
# Test pretty_errors features
- cargo build --verbose --features pretty_errors
- "cargo test --features pretty_errors -- --skip default_features::"
# Test all features
- cargo build --verbose --features pretty_errors,module_disambiguation
- "cargo test --features pretty_errors,module_disambiguation -- --skip default_features::"
# Test documentation code
- cargo test --doc --all-features
- cargo doc

matrix:
  include:
  - rust: nightly-2020-06-23
    before_script: 
    script:
    - rustup component add --toolchain nightly-2020-06-23 rustfmt
    - cargo +nightly-2020-06-23 fmt -- --check

  - rust: nightly
    before_script: 
    script:
    - rustup component add rustfmt
    - cargo +nightly fmt -- --check
  
  - stage : deploy
    if: tag IS present
    rust: stable
    before_script:
    script: skip
    before_deploy:
    - GIT_VERSION=$(git describe --tags)
    # Ready git for use
    - git config user.email "travis@travis-ci.org"
    - git config user.name "Travis CI"
    - git checkout -b master
    # Use throw-away branch so we don't push the changes to origin
    - git checkout -b travis_branch
    # Update cargo version, 
    - sed -i "s/version = \"0.0.0\"/version = \"$GIT_VERSION\"/" Cargo.toml
    - git add Cargo.toml
    # Insert changes to cargo readme
    - sed -n "/^## \[Unreleased]/,/^## \[[0-9]/p;/^## \[[0-9]/q" CHANGELOG.md | head -n -1 | tail -n +2 > CHANGES.txt
    - sed -e '/\[changelog_body]/{' -e 'r CHANGES.txt' -e 'd' -e '}' -i cargo-readme.md
    - git add cargo-readme.md
    - rm CHANGES.txt
    # Commit changes so cargo doesn't complain about dirty repo
    - git commit -m "Deploy changes."
    
    after_deploy:
    # Decrypt ssh private key file to allow pushing to git repo after deploy.
    - openssl aes-256-cbc -K $encrypted_8cb7d1a48406_key -iv $encrypted_8cb7d1a48406_iv -in git_private_key.enc -out ~/.ssh/id_rsa -d
    - chmod 400 ~/.ssh/id_rsa
    # Back to master to clean the changes made during packaging.
    - git checkout master
    # Update changelog
    - DATE=$(date +%Y-%m-%d)
    - sed -i "s/## \[Unreleased]/## \[Unreleased]\n\n## \[$GIT_VERSION] - $DATE/" CHANGELOG.md
    - git add CHANGELOG.md
    - git commit -m "Reset CHANGELOG after v$GIT_VERSION."
    # Push changes to repo
    - git remote add origin-ssh "git@github.com:Emoun/duplicate.git"
    - git push origin-ssh master
    - rm -f ~/.ssh/id_rsa
    
    deploy:
      provider: cargo
      token:
        secure: oqzw1/1lKTwAvhhToVYJT+YVO+n9ITS3bfuAyAYjstB3c4TKyN0sE6i7zl18VTJKLauwSyUiBrlRjcpAc49xzpHqnZcRArbQzeNFPeU8Unlfcegz7iHEBH4BSATlqAEUO0r2ijfnTRIf7nRViwmtWQHH/SAYiXRC8pguhuZAD27cupe0OaQ0F9HbhmnL9+F8wJMdZgqmQILCO8BXahomv6mU/mmMXDXtvWcVE8IBp2ezcJvMqLzSr7XEhBlZJCRSbV22JkJ6SncsjmPzgBz7R+tm3NrcRGCF83GKCNkV2CXkZMlcQPJ1zda+MauhlsVwv8ulKDjMsezvvkFrBnx8e2nnoV21cSpAMn9Byx/HC8FU2sq8o6MsOWcuf6fnNfoo0uKpRjDdok8tvZge3k7pTrYdz6ojZ77iwUfD56uVT9ayAfX3Demu5OAjd4TOrSkB/RVMF59odS1XAUv2HTvjkfbsrjn3U7CmD78fSGZZchh7iedzNOlEmIax9lycmmxyQwqx7FLvKkwNKBXtE3ZZIeG2S0RHsTbNwkPE7VnYbmKaqwmBRNAWYO7hgf23VbJXld91e1LSrQ6CRTGif+d4trXQDdITJxKRcuNlYzImxKgN3y7vGU5xBG36kfbYMWityJuza1kTQaZdT5gK24oAs1TqkcTjt6+rLRFAEroIuFg=
      on:
        tags: true
    
  allow_failures:
  - rust: nightly
