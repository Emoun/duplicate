language: rust
rust:
- 1.34.2
- 1.42.0
- stable
- beta
- nightly

before_script:
# Can only use stable rust to build cargo-expand because it doesn't build on 1.34
- rustup install stable
- cargo +stable install cargo-expand
# Install dependencies of 'macrotest'
- rustup toolchain install nightly
- rustup component add --toolchain nightly rustfmt

script:
# Test no_features
- "cargo test --tests --no-default-features -- --skip default_features::"
# Test default_features
- if [ $TRAVIS_RUST_VERSION != "1.34.2" ]; then
    cargo test --tests --verbose default_features::;
  fi
# Test module_disambiguation features
- if [ $TRAVIS_RUST_VERSION != "1.34.2" ]; then
    cargo test --tests --features module_disambiguation -- --skip default_features::;
  fi
# Test pretty_errors features
- "cargo test --tests --features pretty_errors -- --skip default_features::"
# Test all features
- FEATURES=pretty_errors
- if [ $TRAVIS_RUST_VERSION != "1.34.2" ]; then FEATURES=$FEATURES,module_disambiguation; fi
- "cargo test --tests --features $FEATURES -- --skip default_features::"
# Test documentation code
# We only use >1.34 because there is a bug in 'cargo test'
# that means doctests always use all default features.
# This will cause 'module_disambiguation' doctests to fail on 1.34
- if [ $TRAVIS_RUST_VERSION != "1.34.2" ]; then
    cargo test --doc --all-features;
  fi
- cargo doc

matrix:
  include:
  - rust: nightly-2020-06-23
    before_script: 
    script:
    - rustup component add --toolchain nightly-2020-06-23 rustfmt
    - cargo +nightly-2020-06-23 fmt -- --check

  - rust: nightly
    before_script: 
    script:
    - rustup component add rustfmt
    - cargo +nightly fmt -- --check
  
  - stage : deploy
    if: tag IS present
    rust: stable
    before_script:
    script: skip
    before_deploy:
    - GIT_VERSION=$(git describe --tags)
    # Ready git for use
    - git config user.email "travis@travis-ci.org"
    - git config user.name "Travis CI"
    - git checkout -b master
    # Use throw-away branch so we don't push the changes to origin
    - git checkout -b travis_branch
    # Update cargo version, 
    - sed -i "s/version = \"0.0.0\"/version = \"$GIT_VERSION\"/" Cargo.toml
    - git add Cargo.toml
    # Insert changes to cargo readme
    - sed -n "/^## \[Unreleased]/,/^## \[[0-9]/p;/^## \[[0-9]/q" CHANGELOG.md | head -n -1 | tail -n +2 > CHANGES.txt
    - sed -e '/\[changelog_body]/{' -e 'r CHANGES.txt' -e 'd' -e '}' -i cargo-readme.md
    - git add cargo-readme.md
    - rm CHANGES.txt
    # Commit changes so cargo doesn't complain about dirty repo
    - git commit -m "Deploy changes."
    
    after_deploy:
    # Decrypt ssh private key file to allow pushing to git repo after deploy.
    - openssl aes-256-cbc -K $encrypted_8cb7d1a48406_key -iv $encrypted_8cb7d1a48406_iv -in git_private_key.enc -out ~/.ssh/id_rsa -d
    - chmod 400 ~/.ssh/id_rsa
    # Back to master to clean the changes made during packaging.
    - git checkout master
    # Update changelog
    - DATE=$(date +%Y-%m-%d)
    - sed -i "s/## \[Unreleased]/## \[Unreleased]\n\n## \[$GIT_VERSION] - $DATE/" CHANGELOG.md
    - git add CHANGELOG.md
    - git commit -m "Reset CHANGELOG after v$GIT_VERSION."
    # Push changes to repo
    - git remote add origin-ssh "git@github.com:Emoun/duplicate.git"
    - git push origin-ssh master
    - rm -f ~/.ssh/id_rsa
    
    deploy:
      provider: cargo
      token:
        secure: jK5t7ErsbeuOcKTexj593VS3gpNGnl3/XFZzkoDfretFegsx2gQ1M4YOHSZott4U7PNmOy59FY2IJRRUA0ehcsO4KIGqKJMwPtTJXlrXMm4DqyYXdPtTejAk90R8N/qLCyU7/HYp0wxYYc8PWQLM3KHVZ0yQQMh2OJMdb/MOFV/+MR4OgEkG015JJDsrgY46sPeCjucjCYjuU59THs6fPfcdIZmcua7S323yeCVUkUuHqd1XhtMCL3VlAK79N7QeXL7y5k3XEldVX928ZomNSF3HagaOYrBOJcg9SoZgFfvRZMtffCeRU7w2vwy8ZqikVpINohdyApXheWxNl9r8FdBiXHE0UVzXv4m+g+6m4gBRiIClLTjBkvqNmbuyLG8Yz6Zo2mAl4GzLOPD3yrAaAiq9s/XDXi5bk/2GxqHkqDCKVA+8ZtMmsfaS3IUj19pU14fRyvkK69Hs4GTLuVh/ynN99MWcDaTQBsSwEPzwkizKB0c3D91Rhy81/cpyDMeN1ZGpeam7F09A9iLtBRQQLtz5mSj1ZOiNL0a+8IYzh/iYVKnxjcZSkQqQk45mdsv2jfAs/BIU+12ICPQlOPc2wTyLwBFa6ArzpR5xfFhENzWNtuvqmYftbz4bFpzDgezuGgGLRbqfLvCALhs1ZRRLvBdk5et2eRpMumOWdKY5vis=
      on:
        tags: true
    
  allow_failures:
  - rust: nightly
